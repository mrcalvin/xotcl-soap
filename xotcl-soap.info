<?xml version="1.0"?>
<!-- Generated by the OpenACS Package Manager -->

<package key="xotcl-soap" url="http://openacs.org/repository/apm/packages/xotcl-soap" type="apm_service">
    <package-name>xosoap</package-name>
    <pretty-plural></pretty-plural>
    <initial-install-p>f</initial-install-p>
    <singleton-p>f</singleton-p>
    <auto-mount>xosoap</auto-mount>

    <version name="0.3" url="http://media.wu-wien.ac.at/download/xotcl-soap-0.3.apm">
        <owner url="mailto:stefan.sobernig@wu-wien.ac.at">Stefan Sobernig</owner>
        <release-date>2007-03-19</release-date>
        <maturity>0</maturity>

        <provides url="xotcl-soap" version="0.3"/>
        <requires url="xotcl-core" version="0.47"/>
        <requires url="xotcl-request-broker" version="0.3"/>

        <callbacks>
            <callback type="after-mount"  proc="::xosoap::after-mount"/>
            <callback type="before-unmount"  proc="::xosoap::before-unmount"/>
        </callbacks>
        <parameters>
            <parameter datatype="string"  min_n_values="1"  max_n_values="1"  name="interceptor_config"  default="standard" description="xosoap allows for creating pre-invocation interceptors for request and post-invocation interceptors for responses. Currently, xosoap comes with two configuration of interceptors chains, i.e. &quot;standard&quot; and &quot;extended&quot;. "/>
            <parameter datatype="string"  min_n_values="1"  max_n_values="1"  name="service_url"  default="services" description="The parameter value specifies the url segment that will prefix url endpoints of services, i.e. http://#base_url#/#package_key#/#service_url#/#service#. It defaults to &quot;services&quot;."/>
            <parameter datatype="number"  min_n_values="1"  max_n_values="1"  name="use_tclcurl"  default="0" description="The xotcl-soap protocol-plugin for xotcl-request-broker may use TclCurl, provided that it is available as AOLServer module, as transport component for http and https (as an alternative for xotcl-core's comm environment)." section_name="transport::client"/>
        </parameters>

    </version>
</package>
